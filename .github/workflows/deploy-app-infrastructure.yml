name: Deploy app infrastructure

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      # TODO: Secrets at job level?
      AWS_S3_BUCKET_NAME: '${{ vars.AWS_S3_BUCKET_NAME }}'
      AWS_REGION: '${{ vars.AWS_REGION }}'
      DOMAIN_NAME: '${{ vars.DOMAIN_NAME }}'
      AWS_S3_DIRECTORY_NAME: 'terraform/backend'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Check and Create AWS S3 Bucket
      run: |
        aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
        aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
        if aws s3 ls "s3://$AWS_S3_BUCKET_NAME" 2>&1 | grep -q 'NoSuchBucket'; then
            echo "Bucket does not exist. Creating bucket."
            aws s3 mb "s3://$AWS_S3_BUCKET_NAME" --region "$AWS_REGION"
          else
            echo "Bucket exists."
          fi
        if ! aws s3api list-objects --bucket "$AWS_S3_BUCKET_NAME" --prefix "$AWS_S3_DIRECTORY_NAME/" | grep -q '"Key": "'$AWS_S3_DIRECTORY_NAME'/""'; then
          echo "Directory does not exist. Creating directory."
            aws s3api put-object --bucket "$AWS_S3_BUCKET_NAME" --key "$AWS_S3_DIRECTORY_NAME/"
          else
              echo "Directory exists."
          fi
      env:
        # TODO: Need for variables at step level?
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_S3_BUCKET_NAME: ${{ env.AWS_S3_BUCKET_NAME }}
        AWS_REGION: ${{ env.AWS_REGION }}
        S3_DIRECTORY_NAME: ${{ env.AWS_S3_DIRECTORY_NAME }}

    - name: Generate Terraform Backend
      # TODO: May I use locals instead?
      run: |
        cd infrastructure/backend
        sed -e "s/AWS_S3_BUCKET_NAME/\"${AWS_S3_BUCKET_NAME}\"/" \
            -e "s/AWS_REGION/\"${AWS_REGION}\"/" \
            -e "s/AWS_ACCESS_KEY_ID/\"$AWS_ACCESS_KEY_ID\"/" \
            -e "s/AWS_SECRET_KEY/\"$AWS_SECRET_ACCESS_KEY\"/" \
            backend.tf.template > backend.tf
        cat backend.tf
      env:
        AWS_S3_BUCKET_NAME: ${{ env.AWS_S3_BUCKET_NAME }}
        AWS_REGION: ${{ env.AWS_REGION }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ vars.AWS_REGION }}

    - name: Terraform Init
      run: terraform init
      working-directory: ./infrastructure/backend

    - name: Terraform Plan
      run: terraform plan
      working-directory: ./infrastructure/backend
      env:
        TF_VAR_do_api_key_token: ${{ secrets.DO_API_KEY_TOKEN }}
        TF_VAR_do_ssh_key_fingerprint: ${{ secrets.DO_SSH_KEY_FINGERPRINT }}
        TF_VAR_domain_name: ${{ env.DOMAIN_NAME }}

    - name: Terraform Apply
      run: terraform apply -auto-approve
      working-directory: ./infrastructure/backend
      env:
        TF_VAR_do_api_key_token: ${{ secrets.DO_API_KEY_TOKEN }}
        TF_VAR_do_ssh_key_fingerprint: ${{ secrets.DO_SSH_KEY_FINGERPRINT }}
        TF_VAR_domain_name: ${{ env.DOMAIN_NAME }}
