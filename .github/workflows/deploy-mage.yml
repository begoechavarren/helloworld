name: Deploy mage

on:
  workflow_dispatch:

jobs:
  build_and_push_docker_image:
    runs-on: ubuntu-latest
    outputs:
      ecr-uri: ${{ steps.set-ecr-uri.outputs.ECR_URI }}
    env:
      AWS_S3_BUCKET_NAME: '${{ vars.AWS_S3_BUCKET_NAME }}'
      AWS_REGION: '${{ vars.AWS_REGION }}'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Generate Terraform Backend
      run: |
        cd infrastructure/mage-initial
        sed -e "s/AWS_S3_BUCKET_NAME/\"${AWS_S3_BUCKET_NAME}\"/" \
            -e "s/AWS_REGION/\"${AWS_REGION}\"/" \
            -e "s/AWS_ACCESS_KEY_ID/\"$AWS_ACCESS_KEY_ID\"/" \
            -e "s/AWS_SECRET_KEY/\"$AWS_SECRET_ACCESS_KEY\"/" \
            backend.tf.template > backend.tf
        cat backend.tf
      env:
        AWS_S3_BUCKET_NAME: ${{ env.AWS_S3_BUCKET_NAME }}
        AWS_REGION: ${{ env.AWS_REGION }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_wrapper: false

    - name: Initialize Terraform
      run: terraform init
      working-directory: ./infrastructure/mage-initial

    - name: Run Terraform apply
      run: terraform apply -auto-approve -var "aws_region=$AWS_REGION" -var "ecr_repository_name=sermadrid"
      working-directory: ./infrastructure/mage-initial
      env:
        AWS_S3_BUCKET_NAME: ${{ env.AWS_S3_BUCKET_NAME }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ env.AWS_REGION }}
  
    - name: Set ECR_URI environment variable
      id: set-ecr-uri
      run: |
        echo "Attempting to retrieve ecr_repository_uri from Terraform..."
        ECR_URI=$(terraform output -raw ecr_repository_uri)
        RETVAL=$?
        if [ $RETVAL -ne 0 ]; then
          echo "Error retrieving ecr_repository_uri: $ECR_URI"
          exit 1
        fi
        echo "ECR_URI=${ECR_URI}" >> $GITHUB_ENV
        echo "ECR_URI=${ECR_URI}" >> $GITHUB_OUTPUT
        echo "ECR_URI has been set to: $ECR_URI"
      working-directory: ./infrastructure/mage-initial
      env:
        AWS_S3_BUCKET_NAME: ${{ env.AWS_S3_BUCKET_NAME }}
        AWS_REGION: ${{ env.AWS_REGION }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                
    - name: Log in to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v1
      with:
        mask-password: true
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ env.AWS_REGION }}
        ECR_URI: ${{ env.ECR_URI }}
  
    - name: Build, tag, and push image to ECR
      run: |
        docker build --platform linux/amd64 --tag sermadrid:latest mage/
        docker tag sermadrid:latest ${{ env.ECR_URI }}:latest
        docker push ${{ env.ECR_URI }}:latest
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ env.AWS_REGION }}
        ECR_URI: ${{ env.ECR_URI }}
  
  deploy_infrastructure:
    runs-on: ubuntu-latest
    needs: build_and_push_docker_image
    env:
      AWS_S3_BUCKET_NAME: '${{ vars.AWS_S3_BUCKET_NAME }}'
      AWS_REGION: '${{ vars.AWS_REGION }}'
      ECR_URI: ${{ needs.build_and_push_docker_image.outputs.ecr-uri }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Generate Terraform Backend
      run: |
        cd infrastructure/mage
        sed -e "s/AWS_S3_BUCKET_NAME/\"${AWS_S3_BUCKET_NAME}\"/" \
            -e "s/AWS_REGION/\"${AWS_REGION}\"/" \
            -e "s/AWS_ACCESS_KEY_ID/\"$AWS_ACCESS_KEY_ID\"/" \
            -e "s/AWS_SECRET_KEY/\"$AWS_SECRET_ACCESS_KEY\"/" \
            backend.tf.template > backend.tf
        cat backend.tf
      env:
        AWS_S3_BUCKET_NAME: ${{ env.AWS_S3_BUCKET_NAME }}
        AWS_REGION: ${{ env.AWS_REGION }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_wrapper: false

    - name: Initialize Terraform
      run: terraform init
      working-directory: ./infrastructure/mage

    - name: Apply Terraform
      working-directory: infrastructure/mage
      run: terraform apply -auto-approve -var "docker_image=${{ env.ECR_URI }}:latest" -var "database_password=${{ env.DATABASE_PASSWORD }}"
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ env.AWS_REGION }}
        ECR_URI: ${{ env.ECR_URI }}
        DATABASE_PASSWORD: ${{ secrets.AWS_DATABASE_PASSWORD }}
