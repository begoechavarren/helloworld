name: Deploy infrastructure

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      # TODO: Secrets at job level?
      AWS_S3_BUCKET_NAME: '${{ vars.AWS_S3_BUCKET_NAME }}'
      AWS_REGION: '${{ vars.AWS_REGION }}'

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Check and Create AWS S3 Bucket
      run: |
        aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
        aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
        if aws s3 ls "s3://$AWS_S3_BUCKET_NAME" 2>&1 | grep -q 'NoSuchBucket'; then
            echo "Bucket does not exist. Creating bucket."
            aws s3 mb "s3://$AWS_S3_BUCKET_NAME" --region "$AWS_REGION"
          else
            echo "Bucket exists."
          fi
      env:
        # TODO: Need for variables at step level?
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_S3_BUCKET_NAME: ${{ env.AWS_S3_BUCKET_NAME }}
        AWS_REGION: ${{ env.AWS_REGION }}

    - name: Generate Terraform Backend
      # TODO: May I use locals instead?
      run: |
        cd infrastructure
        sed -e "s/AWS_S3_BUCKET_NAME/\"${AWS_S3_BUCKET_NAME}\"/" \
            -e "s/AWS_REGION/\"${AWS_REGION}\"/" \
            -e "s/AWS_ACCESS_KEY_ID/\"$AWS_ACCESS_KEY_ID\"/" \
            -e "s/AWS_SECRET_KEY/\"$AWS_SECRET_ACCESS_KEY\"/" \
            backend.tf.template > backend.tf
        cat backend.tf
      env:
        AWS_S3_BUCKET_NAME: ${{ env.AWS_S3_BUCKET_NAME }}
        AWS_REGION: ${{ env.AWS_REGION }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Terraform Init
      run: terraform init
      working-directory: ./infrastructure

    - name: Terraform Plan
      run: terraform plan
      working-directory: ./infrastructure
      env:
        TF_VAR_do_token: ${{ secrets.DO_TOKEN }}
        TF_VAR_ssh_fingerprint: ${{ secrets.SSH_FINGERPRINT }}
        TF_VAR_AWS_S3_BUCKET_NAME: ${{ env.AWS_S3_BUCKET_NAME }}
        TF_VAR_AWS_REGION: ${{ env.AWS_REGION }}
        TF_VAR_AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY_ID }}
        TF_VAR_AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Terraform Apply
      run: terraform apply -auto-approve
      working-directory: ./infrastructure
      env:
        TF_VAR_do_token: ${{ secrets.DO_TOKEN }}
        TF_VAR_ssh_fingerprint: ${{ secrets.SSH_FINGERPRINT }}
        TF_VAR_AWS_S3_BUCKET_NAME: ${{ env.AWS_S3_BUCKET_NAME }}
        TF_VAR_AWS_REGION: ${{ env.AWS_REGION }}
        TF_VAR_AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY_ID }}
        TF_VAR_AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
