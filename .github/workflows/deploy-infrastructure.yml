name: Deploy infrastructure

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      AWS_S3_BUCKET_NAME: '${{ vars.AWS_S3_BUCKET_NAME }}'
      AWS_REGION: '${{ vars.AWS_REGION }}'

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Configure AWS CLI
      run: |
        aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
        aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
        aws configure set default.region $AWS_REGION
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ env.AWS_REGION }}

    - name: Check and Create AWS S3 Bucket
      run: |
        if ! aws s3 ls "s3://$AWS_S3_BUCKET_NAME" 2>&1 | grep -q 'NoSuchBucket'; then
          echo "Bucket does not exist. Creating bucket."
          aws s3 mb "s3://$AWS_S3_BUCKET_NAME"
        else
          echo "Bucket exists."
        fi
      env:
        AWS_S3_BUCKET_NAME: ${{ env.AWS_S3_BUCKET_NAME }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Terraform Init
      run: terraform init
      working-directory: ./infrastructure

    - name: Terraform Apply
      run: terraform apply -auto-approve
      working-directory: ./infrastructure
      env:
        TF_VAR_do_token: ${{ secrets.DO_TOKEN }}
        TF_VAR_ssh_fingerprint: ${{ secrets.SSH_FINGERPRINT }}
        TF_VAR_AWS_S3_BUCKET_NAME: ${{ env.AWS_S3_BUCKET_NAME }}
        TF_VAR_AWS_REGION: ${{ env.AWS_REGION }}
        TF_VAR_AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY_ID }}
        TF_VAR_AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
