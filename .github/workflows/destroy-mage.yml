name: Destroy mage

on:
  workflow_dispatch:

jobs:
  destroy_infrastructure:
    runs-on: ubuntu-latest
    env:
      AWS_S3_BUCKET_NAME: '${{ vars.AWS_S3_BUCKET_NAME }}'
      AWS_REGION: '${{ vars.AWS_REGION }}'
      ECR_URI: '${{ vars.ECR_URI }}'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Generate Terraform Backend
      run: |
        cd infrastructure/mage
        sed -e "s/AWS_S3_BUCKET_NAME/\"${AWS_S3_BUCKET_NAME}\"/" \
            -e "s/AWS_REGION/\"${AWS_REGION}\"/" \
            -e "s/AWS_ACCESS_KEY_ID/\"$AWS_ACCESS_KEY_ID\"/" \
            -e "s/AWS_SECRET_KEY/\"$AWS_SECRET_ACCESS_KEY\"/" \
            backend.tf.template > backend.tf
        cat backend.tf
      env:
        AWS_S3_BUCKET_NAME: ${{ env.AWS_S3_BUCKET_NAME }}
        AWS_REGION: ${{ env.AWS_REGION }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_wrapper: false

    - name: Initialize Terraform
      run: terraform init
      working-directory: ./infrastructure/mage

    - name: Destroy Infrastructure
      working-directory: infrastructure/mage
      run: terraform destroy -auto-approve -var "docker_image=${{ env.ECR_URI }}:latest" -var "database_password=${{ secrets.AWS_DATABASE_PASSWORD }}"
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ env.AWS_REGION }}
        ECR_URI: ${{ env.ECR_URI }}
        DATABASE_PASSWORD: ${{ secrets.AWS_DATABASE_PASSWORD }}
