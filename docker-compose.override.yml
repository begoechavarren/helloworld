services:
  backend:
    build: 
      context: .
      dockerfile: backend/backend.dockerfile
    environment:
      - BACKEND_CORS_ORIGINS=${BACKEND_CORS_ORIGINS}
      - MLFLOW_TRACKING_URI=http://mlflow:5000
    volumes:
      - ./backend/app:/code/app
    ports:
      - "8080:80"
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
      dockerfile: frontend.dev.dockerfile
    volumes:
      - ./certs:/etc/letsencrypt
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
    networks:
      - app-network

  mlflow:
    image: ghcr.io/mlflow/mlflow:latest
    ports:
      - "5000:5000"
    volumes:
      - ./mlflow:/mlflow
    environment:
      - MLFLOW_TRACKING_URI=http://0.0.0.0:5000
      - MLFLOW_ARTIFACT_ROOT=/mlflow/artifacts
    command: mlflow server --host 0.0.0.0
    networks:
      - app-network

  mysql:
    image: mysql:8.0
    ports:
      - 3306:3306
    environment:
      - MYSQL_ROOT_PASSWORD=password
      - MYSQL_DATABASE=zenml
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  zenml:
    build: 
      context: .
      dockerfile: zenml/zenml.dev.dockerfile
    ports:
      - "8081:8080"
    environment:
      - ZENML_STORE_URL=mysql://root:password@mysql:3306/zenml
      - ZENML_SERVER_PORT=8080
      - ZENML_DEFAULT_PROJECT_NAME=default
      - ZENML_ANALYTICS_OPT_IN=false
      - ZENML_LOGGING_VERBOSITY=debug
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - app-network


networks:
  app-network:
    driver: bridge